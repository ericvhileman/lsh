// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/latitudesh/lsh/client/api_keys"
	"github.com/latitudesh/lsh/internal/utils"

	"github.com/spf13/cobra"
)

// makeOperationAPIKeysGetAPIKeysCmd returns a cmd to handle operation getApiKeys
func makeOperationAPIKeysGetAPIKeysCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "list",
		Short: `Returns a list of all API keys from the team members`,
		RunE:  runOperationAPIKeysGetAPIKeys,
	}

	if err := registerOperationAPIKeysGetAPIKeysParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationAPIKeysGetAPIKeys uses cmd flags to call endpoint api
func runOperationAPIKeysGetAPIKeys(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := api_keys.NewGetAPIKeysParams()
	if err, _ := retrieveOperationAPIKeysGetAPIKeysAPIVersionFlag(params, "", cmd); err != nil {
		return err
	}
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}

	response, err := appCli.APIKeys.GetAPIKeys(params, nil)
	if err != nil {
		utils.PrintError(err)
		return nil
	}

	if !debug {
		response.Render()
	}
	return nil
}

// registerOperationAPIKeysGetAPIKeysParamFlags registers all flags needed to fill params
func registerOperationAPIKeysGetAPIKeysParamFlags(cmd *cobra.Command) error {
	if err := registerOperationAPIKeysGetAPIKeysAPIVersionParamFlags("", cmd); err != nil {
		return err
	}
	return nil
}

func registerOperationAPIKeysGetAPIKeysAPIVersionParamFlags(cmdPrefix string, cmd *cobra.Command) error {

	apiVersionDescription := ``

	var apiVersionFlagName string
	if cmdPrefix == "" {
		apiVersionFlagName = "API-Version"
	} else {
		apiVersionFlagName = fmt.Sprintf("%v.API-Version", cmdPrefix)
	}

	var apiVersionFlagDefault string = "2023-06-01"

	_ = cmd.PersistentFlags().String(apiVersionFlagName, apiVersionFlagDefault, apiVersionDescription)

	return nil
}

func retrieveOperationAPIKeysGetAPIKeysAPIVersionFlag(m *api_keys.GetAPIKeysParams, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false
	if cmd.Flags().Changed("API-Version") {

		var apiVersionFlagName string
		if cmdPrefix == "" {
			apiVersionFlagName = "API-Version"
		} else {
			apiVersionFlagName = fmt.Sprintf("%v.API-Version", cmdPrefix)
		}

		apiVersionFlagValue, err := cmd.Flags().GetString(apiVersionFlagName)
		if err != nil {
			return err, false
		}
		m.APIVersion = &apiVersionFlagValue

	}
	return nil, retAdded
}
