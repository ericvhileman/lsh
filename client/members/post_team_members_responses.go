// Code generated by go-swagger; DO NOT EDIT.

package members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/latitudesh/cli/models"
)

// PostTeamMembersReader is a Reader for the PostTeamMembers structure.
type PostTeamMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTeamMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostTeamMembersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostTeamMembersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostTeamMembersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /team/members] post-team-members", response, response.Code())
	}
}

// NewPostTeamMembersCreated creates a PostTeamMembersCreated with default headers values
func NewPostTeamMembersCreated() *PostTeamMembersCreated {
	return &PostTeamMembersCreated{}
}

/*
PostTeamMembersCreated describes a response with status code 201, with default header values.

Created
*/
type PostTeamMembersCreated struct {
	Payload *models.Membership
}

// IsSuccess returns true when this post team members created response has a 2xx status code
func (o *PostTeamMembersCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post team members created response has a 3xx status code
func (o *PostTeamMembersCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members created response has a 4xx status code
func (o *PostTeamMembersCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post team members created response has a 5xx status code
func (o *PostTeamMembersCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members created response a status code equal to that given
func (o *PostTeamMembersCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post team members created response
func (o *PostTeamMembersCreated) Code() int {
	return 201
}

func (o *PostTeamMembersCreated) Error() string {
	return fmt.Sprintf("[POST /team/members][%d] postTeamMembersCreated  %+v", 201, o.Payload)
}

func (o *PostTeamMembersCreated) String() string {
	return fmt.Sprintf("[POST /team/members][%d] postTeamMembersCreated  %+v", 201, o.Payload)
}

func (o *PostTeamMembersCreated) GetPayload() *models.Membership {
	return o.Payload
}

func (o *PostTeamMembersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Membership)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersForbidden creates a PostTeamMembersForbidden with default headers values
func NewPostTeamMembersForbidden() *PostTeamMembersForbidden {
	return &PostTeamMembersForbidden{}
}

/*
PostTeamMembersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostTeamMembersForbidden struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this post team members forbidden response has a 2xx status code
func (o *PostTeamMembersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members forbidden response has a 3xx status code
func (o *PostTeamMembersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members forbidden response has a 4xx status code
func (o *PostTeamMembersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members forbidden response has a 5xx status code
func (o *PostTeamMembersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members forbidden response a status code equal to that given
func (o *PostTeamMembersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post team members forbidden response
func (o *PostTeamMembersForbidden) Code() int {
	return 403
}

func (o *PostTeamMembersForbidden) Error() string {
	return fmt.Sprintf("[POST /team/members][%d] postTeamMembersForbidden  %+v", 403, o.Payload)
}

func (o *PostTeamMembersForbidden) String() string {
	return fmt.Sprintf("[POST /team/members][%d] postTeamMembersForbidden  %+v", 403, o.Payload)
}

func (o *PostTeamMembersForbidden) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *PostTeamMembersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamMembersUnprocessableEntity creates a PostTeamMembersUnprocessableEntity with default headers values
func NewPostTeamMembersUnprocessableEntity() *PostTeamMembersUnprocessableEntity {
	return &PostTeamMembersUnprocessableEntity{}
}

/*
PostTeamMembersUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type PostTeamMembersUnprocessableEntity struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this post team members unprocessable entity response has a 2xx status code
func (o *PostTeamMembersUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post team members unprocessable entity response has a 3xx status code
func (o *PostTeamMembersUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post team members unprocessable entity response has a 4xx status code
func (o *PostTeamMembersUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this post team members unprocessable entity response has a 5xx status code
func (o *PostTeamMembersUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this post team members unprocessable entity response a status code equal to that given
func (o *PostTeamMembersUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the post team members unprocessable entity response
func (o *PostTeamMembersUnprocessableEntity) Code() int {
	return 422
}

func (o *PostTeamMembersUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /team/members][%d] postTeamMembersUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostTeamMembersUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /team/members][%d] postTeamMembersUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PostTeamMembersUnprocessableEntity) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *PostTeamMembersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostTeamMembersBody post team members body
swagger:model PostTeamMembersBody
*/
type PostTeamMembersBody struct {

	// data
	// Required: true
	Data *PostTeamMembersParamsBodyData `json:"data"`
}

// Validate validates this post team members body
func (o *PostTeamMembersBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTeamMembersBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post team members body based on the context it is used
func (o *PostTeamMembersBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTeamMembersBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostTeamMembersBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTeamMembersBody) UnmarshalBinary(b []byte) error {
	var res PostTeamMembersBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostTeamMembersParamsBodyData post team members params body data
swagger:model PostTeamMembersParamsBodyData
*/
type PostTeamMembersParamsBodyData struct {

	// attributes
	Attributes *PostTeamMembersParamsBodyDataAttributes `json:"attributes,omitempty"`

	// type
	// Required: true
	// Enum: [memberships]
	Type *string `json:"type"`
}

// Validate validates this post team members params body data
func (o *PostTeamMembersParamsBodyData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTeamMembersParamsBodyData) validateAttributes(formats strfmt.Registry) error {
	if swag.IsZero(o.Attributes) { // not required
		return nil
	}

	if o.Attributes != nil {
		if err := o.Attributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "data" + "." + "attributes")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "data" + "." + "attributes")
			}
			return err
		}
	}

	return nil
}

var postTeamMembersParamsBodyDataTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["memberships"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postTeamMembersParamsBodyDataTypeTypePropEnum = append(postTeamMembersParamsBodyDataTypeTypePropEnum, v)
	}
}

const (

	// PostTeamMembersParamsBodyDataTypeMemberships captures enum value "memberships"
	PostTeamMembersParamsBodyDataTypeMemberships string = "memberships"
)

// prop value enum
func (o *PostTeamMembersParamsBodyData) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postTeamMembersParamsBodyDataTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostTeamMembersParamsBodyData) validateType(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"data"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("body"+"."+"data"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this post team members params body data based on the context it is used
func (o *PostTeamMembersParamsBodyData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAttributes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTeamMembersParamsBodyData) contextValidateAttributes(ctx context.Context, formats strfmt.Registry) error {

	if o.Attributes != nil {

		if swag.IsZero(o.Attributes) { // not required
			return nil
		}

		if err := o.Attributes.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "data" + "." + "attributes")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "data" + "." + "attributes")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostTeamMembersParamsBodyData) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTeamMembersParamsBodyData) UnmarshalBinary(b []byte) error {
	var res PostTeamMembersParamsBodyData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostTeamMembersParamsBodyDataAttributes post team members params body data attributes
swagger:model PostTeamMembersParamsBodyDataAttributes
*/
type PostTeamMembersParamsBodyDataAttributes struct {

	// email
	// Required: true
	Email *string `json:"email"`

	// first name
	FirstName string `json:"first_name,omitempty"`

	// last name
	LastName string `json:"last_name,omitempty"`

	// role
	// Required: true
	// Enum: [owner administrator collaborator billing]
	Role *string `json:"role"`
}

// Validate validates this post team members params body data attributes
func (o *PostTeamMembersParamsBodyDataAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostTeamMembersParamsBodyDataAttributes) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"data"+"."+"attributes"+"."+"email", "body", o.Email); err != nil {
		return err
	}

	return nil
}

var postTeamMembersParamsBodyDataAttributesTypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["owner","administrator","collaborator","billing"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postTeamMembersParamsBodyDataAttributesTypeRolePropEnum = append(postTeamMembersParamsBodyDataAttributesTypeRolePropEnum, v)
	}
}

const (

	// PostTeamMembersParamsBodyDataAttributesRoleOwner captures enum value "owner"
	PostTeamMembersParamsBodyDataAttributesRoleOwner string = "owner"

	// PostTeamMembersParamsBodyDataAttributesRoleAdministrator captures enum value "administrator"
	PostTeamMembersParamsBodyDataAttributesRoleAdministrator string = "administrator"

	// PostTeamMembersParamsBodyDataAttributesRoleCollaborator captures enum value "collaborator"
	PostTeamMembersParamsBodyDataAttributesRoleCollaborator string = "collaborator"

	// PostTeamMembersParamsBodyDataAttributesRoleBilling captures enum value "billing"
	PostTeamMembersParamsBodyDataAttributesRoleBilling string = "billing"
)

// prop value enum
func (o *PostTeamMembersParamsBodyDataAttributes) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postTeamMembersParamsBodyDataAttributesTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostTeamMembersParamsBodyDataAttributes) validateRole(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"data"+"."+"attributes"+"."+"role", "body", o.Role); err != nil {
		return err
	}

	// value enum
	if err := o.validateRoleEnum("body"+"."+"data"+"."+"attributes"+"."+"role", "body", *o.Role); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post team members params body data attributes based on context it is used
func (o *PostTeamMembersParamsBodyDataAttributes) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTeamMembersParamsBodyDataAttributes) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTeamMembersParamsBodyDataAttributes) UnmarshalBinary(b []byte) error {
	var res PostTeamMembersParamsBodyDataAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
