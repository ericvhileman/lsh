// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/latitudesh/cli/models"
)

// GetUserProfileReader is a Reader for the GetUserProfile structure.
type GetUserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /user/profile] get-user-profile", response, response.Code())
	}
}

// NewGetUserProfileOK creates a GetUserProfileOK with default headers values
func NewGetUserProfileOK() *GetUserProfileOK {
	return &GetUserProfileOK{}
}

/*
GetUserProfileOK describes a response with status code 200, with default header values.

Success
*/
type GetUserProfileOK struct {
	Payload *GetUserProfileOKBody
}

// IsSuccess returns true when this get user profile o k response has a 2xx status code
func (o *GetUserProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user profile o k response has a 3xx status code
func (o *GetUserProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile o k response has a 4xx status code
func (o *GetUserProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user profile o k response has a 5xx status code
func (o *GetUserProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile o k response a status code equal to that given
func (o *GetUserProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user profile o k response
func (o *GetUserProfileOK) Code() int {
	return 200
}

func (o *GetUserProfileOK) Error() string {
	return fmt.Sprintf("[GET /user/profile][%d] getUserProfileOK  %+v", 200, o.Payload)
}

func (o *GetUserProfileOK) String() string {
	return fmt.Sprintf("[GET /user/profile][%d] getUserProfileOK  %+v", 200, o.Payload)
}

func (o *GetUserProfileOK) GetPayload() *GetUserProfileOKBody {
	return o.Payload
}

func (o *GetUserProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserProfileOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetUserProfileOKBody get user profile o k body
swagger:model GetUserProfileOKBody
*/
type GetUserProfileOKBody struct {

	// data
	Data *models.User `json:"data,omitempty"`
}

// Validate validates this get user profile o k body
func (o *GetUserProfileOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserProfileOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getUserProfileOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getUserProfileOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get user profile o k body based on the context it is used
func (o *GetUserProfileOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserProfileOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if swag.IsZero(o.Data) { // not required
			return nil
		}

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getUserProfileOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getUserProfileOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserProfileOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserProfileOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserProfileOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
