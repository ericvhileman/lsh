// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/latitudesh/cli/internal"
	"github.com/latitudesh/cli/models"
)

// ServerUnscheduleDeletionReader is a Reader for the ServerUnscheduleDeletion structure.
type ServerUnscheduleDeletionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerUnscheduleDeletionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewServerUnscheduleDeletionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewServerUnscheduleDeletionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := internal.NewNotFoundError()
		if err := result.ReadResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /servers/{server_id}/schedule_deletion] server-unschedule-deletion", response, response.Code())
	}
}

// NewServerUnscheduleDeletionNoContent creates a ServerUnscheduleDeletionNoContent with default headers values
func NewServerUnscheduleDeletionNoContent() *ServerUnscheduleDeletionNoContent {
	return &ServerUnscheduleDeletionNoContent{}
}

/*
ServerUnscheduleDeletionNoContent describes a response with status code 204, with default header values.

No content
*/
type ServerUnscheduleDeletionNoContent struct {
}

// IsSuccess returns true when this server unschedule deletion no content response has a 2xx status code
func (o *ServerUnscheduleDeletionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this server unschedule deletion no content response has a 3xx status code
func (o *ServerUnscheduleDeletionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this server unschedule deletion no content response has a 4xx status code
func (o *ServerUnscheduleDeletionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this server unschedule deletion no content response has a 5xx status code
func (o *ServerUnscheduleDeletionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this server unschedule deletion no content response a status code equal to that given
func (o *ServerUnscheduleDeletionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the server unschedule deletion no content response
func (o *ServerUnscheduleDeletionNoContent) Code() int {
	return 204
}

func (o *ServerUnscheduleDeletionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{server_id}/schedule_deletion][%d] serverUnscheduleDeletionNoContent ", 204)
}

func (o *ServerUnscheduleDeletionNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{server_id}/schedule_deletion][%d] serverUnscheduleDeletionNoContent ", 204)
}

func (o *ServerUnscheduleDeletionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServerUnscheduleDeletionForbidden creates a ServerUnscheduleDeletionForbidden with default headers values
func NewServerUnscheduleDeletionForbidden() *ServerUnscheduleDeletionForbidden {
	return &ServerUnscheduleDeletionForbidden{}
}

/*
ServerUnscheduleDeletionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServerUnscheduleDeletionForbidden struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this server unschedule deletion forbidden response has a 2xx status code
func (o *ServerUnscheduleDeletionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this server unschedule deletion forbidden response has a 3xx status code
func (o *ServerUnscheduleDeletionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this server unschedule deletion forbidden response has a 4xx status code
func (o *ServerUnscheduleDeletionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this server unschedule deletion forbidden response has a 5xx status code
func (o *ServerUnscheduleDeletionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this server unschedule deletion forbidden response a status code equal to that given
func (o *ServerUnscheduleDeletionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the server unschedule deletion forbidden response
func (o *ServerUnscheduleDeletionForbidden) Code() int {
	return 403
}

func (o *ServerUnscheduleDeletionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /servers/{server_id}/schedule_deletion][%d] serverUnscheduleDeletionForbidden  %+v", 403, o.Payload)
}

func (o *ServerUnscheduleDeletionForbidden) String() string {
	return fmt.Sprintf("[DELETE /servers/{server_id}/schedule_deletion][%d] serverUnscheduleDeletionForbidden  %+v", 403, o.Payload)
}

func (o *ServerUnscheduleDeletionForbidden) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *ServerUnscheduleDeletionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
