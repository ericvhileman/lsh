// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/latitudesh/lsh/models"
)

// DeleteAPIKeyReader is a Reader for the DeleteAPIKey structure.
type DeleteAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAPIKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteAPIKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /auth/api_keys/{id}] delete-api-key", response, response.Code())
	}
}

// NewDeleteAPIKeyOK creates a DeleteAPIKeyOK with default headers values
func NewDeleteAPIKeyOK() *DeleteAPIKeyOK {
	return &DeleteAPIKeyOK{}
}

/*
DeleteAPIKeyOK describes a response with status code 200, with default header values.

API Key Deleted
*/
type DeleteAPIKeyOK struct {
}

// IsSuccess returns true when this delete Api key o k response has a 2xx status code
func (o *DeleteAPIKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete Api key o k response has a 3xx status code
func (o *DeleteAPIKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api key o k response has a 4xx status code
func (o *DeleteAPIKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Api key o k response has a 5xx status code
func (o *DeleteAPIKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api key o k response a status code equal to that given
func (o *DeleteAPIKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete Api key o k response
func (o *DeleteAPIKeyOK) Code() int {
	return 200
}

func (o *DeleteAPIKeyOK) Error() string {
	return fmt.Sprintf("[DELETE /auth/api_keys/{id}][%d] deleteApiKeyOK ", 200)
}

func (o *DeleteAPIKeyOK) String() string {
	return fmt.Sprintf("[DELETE /auth/api_keys/{id}][%d] deleteApiKeyOK ", 200)
}

func (o *DeleteAPIKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAPIKeyNotFound creates a DeleteAPIKeyNotFound with default headers values
func NewDeleteAPIKeyNotFound() *DeleteAPIKeyNotFound {
	return &DeleteAPIKeyNotFound{}
}

/*
DeleteAPIKeyNotFound describes a response with status code 404, with default header values.

API Key Not Found
*/
type DeleteAPIKeyNotFound struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this delete Api key not found response has a 2xx status code
func (o *DeleteAPIKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Api key not found response has a 3xx status code
func (o *DeleteAPIKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api key not found response has a 4xx status code
func (o *DeleteAPIKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Api key not found response has a 5xx status code
func (o *DeleteAPIKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api key not found response a status code equal to that given
func (o *DeleteAPIKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete Api key not found response
func (o *DeleteAPIKeyNotFound) Code() int {
	return 404
}

func (o *DeleteAPIKeyNotFound) Error() string {
	return fmt.Sprintf("[DELETE /auth/api_keys/{id}][%d] deleteApiKeyNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAPIKeyNotFound) String() string {
	return fmt.Sprintf("[DELETE /auth/api_keys/{id}][%d] deleteApiKeyNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAPIKeyNotFound) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *DeleteAPIKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
