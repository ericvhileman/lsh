// Code generated by go-swagger; DO NOT EDIT.

package v_p_n_sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/latitudesh/cli/models"
)

// DeleteVpnSessionReader is a Reader for the DeleteVpnSession structure.
type DeleteVpnSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVpnSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteVpnSessionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteVpnSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /vpn_sessions/{vpn_session_id}] delete-vpn-session", response, response.Code())
	}
}

// NewDeleteVpnSessionNoContent creates a DeleteVpnSessionNoContent with default headers values
func NewDeleteVpnSessionNoContent() *DeleteVpnSessionNoContent {
	return &DeleteVpnSessionNoContent{}
}

/*
DeleteVpnSessionNoContent describes a response with status code 204, with default header values.

No-Content
*/
type DeleteVpnSessionNoContent struct {
}

// IsSuccess returns true when this delete vpn session no content response has a 2xx status code
func (o *DeleteVpnSessionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete vpn session no content response has a 3xx status code
func (o *DeleteVpnSessionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vpn session no content response has a 4xx status code
func (o *DeleteVpnSessionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete vpn session no content response has a 5xx status code
func (o *DeleteVpnSessionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vpn session no content response a status code equal to that given
func (o *DeleteVpnSessionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete vpn session no content response
func (o *DeleteVpnSessionNoContent) Code() int {
	return 204
}

func (o *DeleteVpnSessionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /vpn_sessions/{vpn_session_id}][%d] deleteVpnSessionNoContent ", 204)
}

func (o *DeleteVpnSessionNoContent) String() string {
	return fmt.Sprintf("[DELETE /vpn_sessions/{vpn_session_id}][%d] deleteVpnSessionNoContent ", 204)
}

func (o *DeleteVpnSessionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVpnSessionNotFound creates a DeleteVpnSessionNotFound with default headers values
func NewDeleteVpnSessionNotFound() *DeleteVpnSessionNotFound {
	return &DeleteVpnSessionNotFound{}
}

/*
DeleteVpnSessionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteVpnSessionNotFound struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this delete vpn session not found response has a 2xx status code
func (o *DeleteVpnSessionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vpn session not found response has a 3xx status code
func (o *DeleteVpnSessionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vpn session not found response has a 4xx status code
func (o *DeleteVpnSessionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vpn session not found response has a 5xx status code
func (o *DeleteVpnSessionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vpn session not found response a status code equal to that given
func (o *DeleteVpnSessionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete vpn session not found response
func (o *DeleteVpnSessionNotFound) Code() int {
	return 404
}

func (o *DeleteVpnSessionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /vpn_sessions/{vpn_session_id}][%d] deleteVpnSessionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVpnSessionNotFound) String() string {
	return fmt.Sprintf("[DELETE /vpn_sessions/{vpn_session_id}][%d] deleteVpnSessionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVpnSessionNotFound) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *DeleteVpnSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
