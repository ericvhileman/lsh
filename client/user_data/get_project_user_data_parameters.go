// Code generated by go-swagger; DO NOT EDIT.

package user_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetProjectUserDataParams creates a new GetProjectUserDataParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProjectUserDataParams() *GetProjectUserDataParams {
	return &GetProjectUserDataParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProjectUserDataParamsWithTimeout creates a new GetProjectUserDataParams object
// with the ability to set a timeout on a request.
func NewGetProjectUserDataParamsWithTimeout(timeout time.Duration) *GetProjectUserDataParams {
	return &GetProjectUserDataParams{
		timeout: timeout,
	}
}

// NewGetProjectUserDataParamsWithContext creates a new GetProjectUserDataParams object
// with the ability to set a context for a request.
func NewGetProjectUserDataParamsWithContext(ctx context.Context) *GetProjectUserDataParams {
	return &GetProjectUserDataParams{
		Context: ctx,
	}
}

// NewGetProjectUserDataParamsWithHTTPClient creates a new GetProjectUserDataParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProjectUserDataParamsWithHTTPClient(client *http.Client) *GetProjectUserDataParams {
	return &GetProjectUserDataParams{
		HTTPClient: client,
	}
}

/*
GetProjectUserDataParams contains all the parameters to send to the API endpoint

	for the get project user data operation.

	Typically these are written to a http.Request.
*/
type GetProjectUserDataParams struct {

	// APIVersion.
	//
	// Default: "2023-06-01"
	APIVersion *string

	/* ExtraFieldsUserData.

	   The `decoded_content` is provided as an extra attribute that shows content in decoded form.

	   Default: "decoded_content"
	*/
	ExtraFieldsUserData *string

	// ProjectIDOrSlug.
	ProjectIDOrSlug string

	// UserDataID.
	UserDataID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get project user data params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProjectUserDataParams) WithDefaults() *GetProjectUserDataParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get project user data params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProjectUserDataParams) SetDefaults() {
	var (
		aPIVersionDefault = string("2023-06-01")

		extraFieldsUserDataDefault = string("decoded_content")
	)

	val := GetProjectUserDataParams{
		APIVersion:          &aPIVersionDefault,
		ExtraFieldsUserData: &extraFieldsUserDataDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get project user data params
func (o *GetProjectUserDataParams) WithTimeout(timeout time.Duration) *GetProjectUserDataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get project user data params
func (o *GetProjectUserDataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get project user data params
func (o *GetProjectUserDataParams) WithContext(ctx context.Context) *GetProjectUserDataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get project user data params
func (o *GetProjectUserDataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get project user data params
func (o *GetProjectUserDataParams) WithHTTPClient(client *http.Client) *GetProjectUserDataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get project user data params
func (o *GetProjectUserDataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get project user data params
func (o *GetProjectUserDataParams) WithAPIVersion(aPIVersion *string) *GetProjectUserDataParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get project user data params
func (o *GetProjectUserDataParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithExtraFieldsUserData adds the extraFieldsUserData to the get project user data params
func (o *GetProjectUserDataParams) WithExtraFieldsUserData(extraFieldsUserData *string) *GetProjectUserDataParams {
	o.SetExtraFieldsUserData(extraFieldsUserData)
	return o
}

// SetExtraFieldsUserData adds the extraFieldsUserData to the get project user data params
func (o *GetProjectUserDataParams) SetExtraFieldsUserData(extraFieldsUserData *string) {
	o.ExtraFieldsUserData = extraFieldsUserData
}

// WithProjectIDOrSlug adds the projectIDOrSlug to the get project user data params
func (o *GetProjectUserDataParams) WithProjectIDOrSlug(projectIDOrSlug string) *GetProjectUserDataParams {
	o.SetProjectIDOrSlug(projectIDOrSlug)
	return o
}

// SetProjectIDOrSlug adds the projectIdOrSlug to the get project user data params
func (o *GetProjectUserDataParams) SetProjectIDOrSlug(projectIDOrSlug string) {
	o.ProjectIDOrSlug = projectIDOrSlug
}

// WithUserDataID adds the userDataID to the get project user data params
func (o *GetProjectUserDataParams) WithUserDataID(userDataID string) *GetProjectUserDataParams {
	o.SetUserDataID(userDataID)
	return o
}

// SetUserDataID adds the userDataId to the get project user data params
func (o *GetProjectUserDataParams) SetUserDataID(userDataID string) {
	o.UserDataID = userDataID
}

// WriteToRequest writes these params to a swagger request
func (o *GetProjectUserDataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// header param API-Version
		if err := r.SetHeaderParam("API-Version", *o.APIVersion); err != nil {
			return err
		}
	}

	if o.ExtraFieldsUserData != nil {

		// query param extra_fields[user_data]
		var qrExtraFieldsUserData string

		if o.ExtraFieldsUserData != nil {
			qrExtraFieldsUserData = *o.ExtraFieldsUserData
		}
		qExtraFieldsUserData := qrExtraFieldsUserData
		if qExtraFieldsUserData != "" {

			if err := r.SetQueryParam("extra_fields[user_data]", qExtraFieldsUserData); err != nil {
				return err
			}
		}
	}

	// path param project_id_or_slug
	if err := r.SetPathParam("project_id_or_slug", o.ProjectIDOrSlug); err != nil {
		return err
	}

	// path param user_data_id
	if err := r.SetPathParam("user_data_id", o.UserDataID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
