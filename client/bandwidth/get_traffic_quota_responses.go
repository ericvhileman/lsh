// Code generated by go-swagger; DO NOT EDIT.

package bandwidth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/latitudesh/cli/models"
)

// GetTrafficQuotaReader is a Reader for the GetTrafficQuota structure.
type GetTrafficQuotaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTrafficQuotaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTrafficQuotaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 503:
		result := NewGetTrafficQuotaServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /traffic/quota] get-traffic-quota", response, response.Code())
	}
}

// NewGetTrafficQuotaOK creates a GetTrafficQuotaOK with default headers values
func NewGetTrafficQuotaOK() *GetTrafficQuotaOK {
	return &GetTrafficQuotaOK{}
}

/*
GetTrafficQuotaOK describes a response with status code 200, with default header values.

Success
*/
type GetTrafficQuotaOK struct {
	Payload *models.TrafficQuota
}

// IsSuccess returns true when this get traffic quota o k response has a 2xx status code
func (o *GetTrafficQuotaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get traffic quota o k response has a 3xx status code
func (o *GetTrafficQuotaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get traffic quota o k response has a 4xx status code
func (o *GetTrafficQuotaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get traffic quota o k response has a 5xx status code
func (o *GetTrafficQuotaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get traffic quota o k response a status code equal to that given
func (o *GetTrafficQuotaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get traffic quota o k response
func (o *GetTrafficQuotaOK) Code() int {
	return 200
}

func (o *GetTrafficQuotaOK) Error() string {
	return fmt.Sprintf("[GET /traffic/quota][%d] getTrafficQuotaOK  %+v", 200, o.Payload)
}

func (o *GetTrafficQuotaOK) String() string {
	return fmt.Sprintf("[GET /traffic/quota][%d] getTrafficQuotaOK  %+v", 200, o.Payload)
}

func (o *GetTrafficQuotaOK) GetPayload() *models.TrafficQuota {
	return o.Payload
}

func (o *GetTrafficQuotaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TrafficQuota)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTrafficQuotaServiceUnavailable creates a GetTrafficQuotaServiceUnavailable with default headers values
func NewGetTrafficQuotaServiceUnavailable() *GetTrafficQuotaServiceUnavailable {
	return &GetTrafficQuotaServiceUnavailable{}
}

/*
GetTrafficQuotaServiceUnavailable describes a response with status code 503, with default header values.

Service not available
*/
type GetTrafficQuotaServiceUnavailable struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this get traffic quota service unavailable response has a 2xx status code
func (o *GetTrafficQuotaServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get traffic quota service unavailable response has a 3xx status code
func (o *GetTrafficQuotaServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get traffic quota service unavailable response has a 4xx status code
func (o *GetTrafficQuotaServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get traffic quota service unavailable response has a 5xx status code
func (o *GetTrafficQuotaServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get traffic quota service unavailable response a status code equal to that given
func (o *GetTrafficQuotaServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get traffic quota service unavailable response
func (o *GetTrafficQuotaServiceUnavailable) Code() int {
	return 503
}

func (o *GetTrafficQuotaServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /traffic/quota][%d] getTrafficQuotaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTrafficQuotaServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /traffic/quota][%d] getTrafficQuotaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetTrafficQuotaServiceUnavailable) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *GetTrafficQuotaServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
