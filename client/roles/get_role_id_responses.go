// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/latitudesh/cli/models"
)

// GetRoleIDReader is a Reader for the GetRoleID structure.
type GetRoleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetRoleIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /roles/{id}] get-role-id", response, response.Code())
	}
}

// NewGetRoleIDOK creates a GetRoleIDOK with default headers values
func NewGetRoleIDOK() *GetRoleIDOK {
	return &GetRoleIDOK{}
}

/*
GetRoleIDOK describes a response with status code 200, with default header values.

Success
*/
type GetRoleIDOK struct {
	Payload *models.Role
}

// IsSuccess returns true when this get role Id o k response has a 2xx status code
func (o *GetRoleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get role Id o k response has a 3xx status code
func (o *GetRoleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get role Id o k response has a 4xx status code
func (o *GetRoleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get role Id o k response has a 5xx status code
func (o *GetRoleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get role Id o k response a status code equal to that given
func (o *GetRoleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get role Id o k response
func (o *GetRoleIDOK) Code() int {
	return 200
}

func (o *GetRoleIDOK) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] getRoleIdOK  %+v", 200, o.Payload)
}

func (o *GetRoleIDOK) String() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] getRoleIdOK  %+v", 200, o.Payload)
}

func (o *GetRoleIDOK) GetPayload() *models.Role {
	return o.Payload
}

func (o *GetRoleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Role)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoleIDNotFound creates a GetRoleIDNotFound with default headers values
func NewGetRoleIDNotFound() *GetRoleIDNotFound {
	return &GetRoleIDNotFound{}
}

/*
GetRoleIDNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetRoleIDNotFound struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this get role Id not found response has a 2xx status code
func (o *GetRoleIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get role Id not found response has a 3xx status code
func (o *GetRoleIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get role Id not found response has a 4xx status code
func (o *GetRoleIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get role Id not found response has a 5xx status code
func (o *GetRoleIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get role Id not found response a status code equal to that given
func (o *GetRoleIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get role Id not found response
func (o *GetRoleIDNotFound) Code() int {
	return 404
}

func (o *GetRoleIDNotFound) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] getRoleIdNotFound  %+v", 404, o.Payload)
}

func (o *GetRoleIDNotFound) String() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] getRoleIdNotFound  %+v", 404, o.Payload)
}

func (o *GetRoleIDNotFound) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *GetRoleIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
