// Code generated by go-swagger; DO NOT EDIT.

package ip_addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/latitudesh/cli/models"
)

// GetIpsReader is a Reader for the GetIps structure.
type GetIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewGetIpsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ips] get-ips", response, response.Code())
	}
}

// NewGetIpsOK creates a GetIpsOK with default headers values
func NewGetIpsOK() *GetIpsOK {
	return &GetIpsOK{}
}

/*
GetIpsOK describes a response with status code 200, with default header values.

Success
*/
type GetIpsOK struct {
	Payload *models.IPAddresses
}

// IsSuccess returns true when this get ips o k response has a 2xx status code
func (o *GetIpsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ips o k response has a 3xx status code
func (o *GetIpsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ips o k response has a 4xx status code
func (o *GetIpsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ips o k response has a 5xx status code
func (o *GetIpsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ips o k response a status code equal to that given
func (o *GetIpsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ips o k response
func (o *GetIpsOK) Code() int {
	return 200
}

func (o *GetIpsOK) Error() string {
	return fmt.Sprintf("[GET /ips][%d] getIpsOK  %+v", 200, o.Payload)
}

func (o *GetIpsOK) String() string {
	return fmt.Sprintf("[GET /ips][%d] getIpsOK  %+v", 200, o.Payload)
}

func (o *GetIpsOK) GetPayload() *models.IPAddresses {
	return o.Payload
}

func (o *GetIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPAddresses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIpsUnprocessableEntity creates a GetIpsUnprocessableEntity with default headers values
func NewGetIpsUnprocessableEntity() *GetIpsUnprocessableEntity {
	return &GetIpsUnprocessableEntity{}
}

/*
GetIpsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetIpsUnprocessableEntity struct {
	Payload *models.ErrorObject
}

// IsSuccess returns true when this get ips unprocessable entity response has a 2xx status code
func (o *GetIpsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ips unprocessable entity response has a 3xx status code
func (o *GetIpsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ips unprocessable entity response has a 4xx status code
func (o *GetIpsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ips unprocessable entity response has a 5xx status code
func (o *GetIpsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get ips unprocessable entity response a status code equal to that given
func (o *GetIpsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get ips unprocessable entity response
func (o *GetIpsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetIpsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /ips][%d] getIpsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetIpsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /ips][%d] getIpsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetIpsUnprocessableEntity) GetPayload() *models.ErrorObject {
	return o.Payload
}

func (o *GetIpsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
